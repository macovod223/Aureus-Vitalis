@* Views/Education/SportTest.cshtml *@
@model TestModel
@{
    ViewData["Title"] = "Sport Test";
    Layout = "~/Views/Education/_EducationLayout.cshtml";
}

<div class="test-area">
  <div class="test-header">
    <h1>@Model.Title</h1>
    <div class="timer" id="timer">
      Оставшееся время: <span id="timeLeft">@($"{Model.TimeLimit}:00")</span>
    </div>
  </div>

  <form id="testForm" method="post">
    @for (int i = 0; i < Model.Questions.Count; i++)
    {
      var q = Model.Questions[i];
      <div class="question-block" data-question="@i">
        <h3>Вопрос @(i+1)</h3>
        <p>@q.Question</p>
        <div class="options">
          @foreach (var opt in q.Options)
          {
            <label class="option">
              <input type="@(q.CorrectAnswer.Contains(";") ? "checkbox" : "radio")"
                     name="question_@(i+1)"
                     value="@opt" />
              <span>@opt</span>
            </label>
          }
        </div>
      </div>
    }

    <div class="test-navigation">
      <button type="button" id="prevBtn" class="nav-button">Назад</button>
      <div class="question-indicators">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
          <span class="indicator" data-question="@i"></span>
        }
      </div>
      <button type="button" id="nextBtn" class="nav-button">Далее</button>
    </div>

    <button type="submit" class="submit-button" disabled>Завершить тест</button>
  </form>
</div>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', ()=>{
  const form      = document.getElementById('testForm');
  const submitBtn = form.querySelector('.submit-button');
  const prevBtn   = document.getElementById('prevBtn');
  const nextBtn   = document.getElementById('nextBtn');
  const blocks    = Array.from(document.querySelectorAll('.question-block'));
  const inds      = Array.from(document.querySelectorAll('.indicator'));
  const total     = blocks.length;
  let   current   = 0;
  let   answers   = {};

  // показываем блок index и обновляем кнопки/индикаторы
  function showQuestion(index){
    blocks.forEach(b=>b.style.display='none');
    blocks[index].style.display='block';
    prevBtn.disabled = index===0;
    nextBtn.disabled = index===total-1;
    inds.forEach((ind,i)=>{
      ind.classList.toggle('current', i===index);
      ind.classList.toggle('answered', Boolean(answers[`question_${i+1}`]));
    });
  }

  prevBtn.addEventListener('click', ()=>{
    if(current>0) showQuestion(--current);
  });
  nextBtn.addEventListener('click', ()=>{
    if(current<total-1) showQuestion(++current);
  });

  // сбор ответов и разблокировка «Завершить тест»
  form.addEventListener('change', e=>{
    if(e.target.name.startsWith('question_')){
      const name = e.target.name;
      if(e.target.type==='checkbox'){
        // несколько ответов
        answers[name] = Array.from(form.querySelectorAll(`input[name="${name}"]:checked`))
                              .map(i=>i.value).join(';');
      } else {
        answers[name] = e.target.value;
      }
      submitBtn.disabled = Object.keys(answers).length < total;
      showQuestion(current);
    }
  });

  // таймер
  (function startTimer(){
    let timeLeft = @Model.TimeLimit * 60;
    const ti = setInterval(()=>{
      timeLeft--;
      const m = Math.floor(timeLeft/60), s = timeLeft%60;
      document.getElementById('timeLeft').textContent = `${m}:${s.toString().padStart(2,'0')}`;
      if(timeLeft<=0){
        clearInterval(ti);
        form.requestSubmit();
      }
    },1000);
  })();

  // сабмит
  form.addEventListener('submit', e=>{
    e.preventDefault();
    // готовим payload
    const payload = Object.entries(answers).map(([k,v])=>({
      questionKey: k,
      selected:    v
    }));
    fetch('/Education/SubmitSportTest',{
      method:'POST',
      headers:{'Content-Type':'application/json'},
      body:JSON.stringify(payload)
    })
    .then(r=>r.json())
    .then(res=>{
      document.querySelector('.test-area').innerHTML = `
        <div class="test-results">
          <h2>Результаты теста</h2>
          <p>Правильных ответов: ${res.correctAnswers}/${res.totalQuestions}</p>
          <p>Процент: ${res.percentage}%</p>
          <p>${res.passed? 'Поздравляем!':'Не прошло, попробуйте снова.'}</p>
          <button onclick="location.href='/Education/Main'" class="nav-button">Вернуться</button>
        </div>`;
    })
    .catch(console.error);
  });

  // старт
  showQuestion(0);
});
</script>
}

@section Sidebar {
    <div class="lessons-list">
        <div class="lesson-item">
            <span class="lesson-number">2</span>
            <span class="lesson-title">Спорт</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "Sport" ? "active" : "")" data-url="/Education/Sport">
            <span class="lesson-number">2.1</span>
            <span class="lesson-title">Спорт. Теория</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "SportPractice" ? "active" : "")" data-url="/Education/SportPractice">
            <span class="lesson-number">2.2</span>
            <span class="lesson-title">Спорт. Практика</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "SportTest" ? "active" : "")" data-url="/Education/SportTest">
            <span class="lesson-number">2.3</span>
            <span class="lesson-title">Спорт. Тест</span>
        </div>
    </div>
}