@* Views/Education/SportPractice.cshtml *@
@model PracticeModel
@{
    ViewData["Title"] = "Sport Practice";
    Layout = "~/Views/Education/_EducationLayout.cshtml";
}

<div class="practice-area">
    <h1>Практика: Физическая активность</h1>

    <div class="practice-task">
        <div class="task-item" data-task-id="1">
            <h3>Составление тренировочного плана</h3>
            <p>Создайте недельный план тренировок, учитывая рекомендации по частоте и интенсивности:</p>
            <div class="workout-planner">
                @foreach (var day in new[] { "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье" })
                {
                    <div class="day-plan">
                        <h4>@day</h4>
                        <select class="workout-type">
                            <option value="">Выберите тип тренировки</option>
                            <option value="cardio">Кардио</option>
                            <option value="strength">Силовая</option>
                            <option value="flexibility">Растяжка</option>
                            <option value="rest">Отдых</option>
                        </select>
                        <select class="workout-intensity">
                            <option value="">Выберите интенсивность</option>
                            <option value="low">Низкая</option>
                            <option value="medium">Средняя</option>
                            <option value="high">Высокая</option>
                        </select>
                        <input type="number" class="workout-duration" placeholder="Длительность (мин)" min="0" max="180" />
                    </div>
                }
            </div>
        </div>

        <div class="task-item" data-task-id="2">
            <h3>Техника выполнения упражнений</h3>
            <p>Определите правильную последовательность выполнения базовых упражнений:</p>
            <div class="exercise-sequence">
                <div class="exercise-step" draggable="true">
                    <span class="step-number">1</span>
                    <p>Восстановление и отдых</p>
                </div>
                <div class="exercise-step" draggable="true">
                    <span class="step-number">2</span>
                    <p>Заминка и растяжка</p>
                </div>
                <div class="exercise-step" draggable="true">
                    <span class="step-number">3</span>
                    <p>Основная часть тренировки</p>
                </div>
                <div class="exercise-step" draggable="true">
                    <span class="step-number">4</span>
                    <p>Разминка и разогрев мышц</p>
                </div>
            </div>
        </div>
    </div>

    <div class="navigation-buttons">
        <button class="nav-button check-button" onclick="checkAnswers()">Проверить</button>
        <button class="nav-button next-button" onclick="nextPractice()" disabled>Далее</button>
    </div>
</div>

@section Scripts {
  <style>
    .explanation-success {
      padding: 15px;
      margin-top: 15px;
      background: rgba(76, 175, 80, 0.1);
      border-left: 4px solid #4CAF50;
      color: var(--text-color);
    }
    .explanation-error {
      padding: 15px;
      margin-top: 15px;
      background: rgba(244, 67, 54, 0.1);
      border-left: 4px solid #f44336;
      color: var(--text-color);
    }
  </style>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // 1) drag-n-drop для exercise-step
      document.querySelectorAll('.exercise-step').forEach(step => {
        step.addEventListener('dragstart', e => {
          e.dataTransfer.setData('text/plain', e.target.innerHTML);
          e.target.classList.add('dragging');
        });
        step.addEventListener('dragover', e => e.preventDefault());
        step.addEventListener('drop', e => {
          e.preventDefault();
          const dragged = document.querySelector('.dragging');
          const target  = e.target.closest('.exercise-step');
          if (dragged && target) {
            [ dragged.innerHTML, target.innerHTML ] = [ target.innerHTML, dragged.innerHTML ];
          }
          dragged.classList.remove('dragging');
        });
      });
    });

    // 2) вызывается inline onclick="checkAnswers()"
    function checkAnswers() {
      const checkBtn = document.querySelector('.check-button');
      checkBtn.disabled = true;

      // Собираем план тренировок
      const workoutPlan = Array.from(document.querySelectorAll('.day-plan')).map(dayEl => ({
        day:       dayEl.querySelector('h4').textContent,
        type:      dayEl.querySelector('.workout-type').value,
        intensity: dayEl.querySelector('.workout-intensity').value,
        duration:  parseInt(dayEl.querySelector('.workout-duration').value, 10) || 0
      }));

      // Собираем последовательность упражнений
      const sequence = Array.from(document.querySelectorAll('.exercise-step'))
                           .map(step => step.querySelector('p').textContent);

      fetch('/Education/CheckSportPracticeAnswers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ workoutPlan, sequence })
      })
      .then(r => r.json())
      .then(results => {
        // Рисуем результаты под каждым .task-item
        document.querySelectorAll('.task-item').forEach(taskEl => {
          const id = taskEl.dataset.taskId;
          // удаляем старые блоки объяснения
          taskEl.querySelectorAll('.explanation-success, .explanation-error')
                .forEach(el => el.remove());
          // создаём новый
          const div = document.createElement('div');
          if (results[id]) {
            div.className = 'explanation-success';
            div.textContent = 'Часть выполнена верно.';
          } else {
            div.className = 'explanation-error';
            div.textContent = 'Часть выполнена неверно, попробуйте еще раз.';
          }
          taskEl.appendChild(div);
        });

        // Разблокируем «Далее», если обе части ок
        if (results['1'] && results['2']) {
          document.querySelector('.next-button').disabled = false;
        } else {
          checkBtn.disabled = false;
        }
      })
      .catch(err => {
        console.error(err);
        checkBtn.disabled = false;
      });
    }

    // 3) вызывается inline onclick="nextPractice()"
    function nextPractice() {
      window.location.href = '/Education/SportTest';
    }
  </script>
}

@section Sidebar {
    <div class="lessons-list">
        <div class="lesson-item">
            <span class="lesson-number">2</span>
            <span class="lesson-title">Спорт</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "Sport" ? "active" : "")" data-url="/Education/Sport">
            <span class="lesson-number">2.1</span>
            <span class="lesson-title">Спорт. Теория</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "SportPractice" ? "active" : "")" data-url="/Education/SportPractice">
            <span class="lesson-number">2.2</span>
            <span class="lesson-title">Спорт. Практика</span>
        </div>
        <div class="lesson-item @(ViewContext.RouteData.Values["action"].ToString() == "SportTest" ? "active" : "")" data-url="/Education/SportTest">
            <span class="lesson-number">2.3</span>
            <span class="lesson-title">Спорт. Тест</span>
        </div>
    </div>
}