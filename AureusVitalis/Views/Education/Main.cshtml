@model AureusVitalis.Models.EducationModel
@{
    ViewData["Title"] = "Education";
    Layout            = "~/Views/Education/_EducationLayout.cshtml";

    var isAuthenticated = User.Identity.IsAuthenticated;
    var blocks          = Model.Blocks;
    var examAvailable   = (bool)(ViewBag.ExamAvailable ?? false);
    var completed       = ((IEnumerable<string>)ViewBag.CompletedModules)
                          ?? Enumerable.Empty<string>();
}

<header class="site-header" style="display:flex;align-items:center;justify-content:space-between;">
    <div style="display:flex;align-items:center;">
        <a href="/" class="nav-icon">
            <img src="~/images/home.png" alt="Home" />
        </a>
        <div class="site-title" style="margin-left:20px;">Aureus&Vitalis</div>
    </div>

    <div style="display:flex;align-items:center;gap:16px;">
        <a href="/DailyHelper/Selection" class="daily-helper-link">Daily helper</a>

        <a href="/Achievements"
           class="achievements-link">
            <img src="/images/trophy.png"
                 alt="Достижения"
                 style="width:22px;margin-right:8px;vertical-align:middle;" />
            Достижения
        </a>
    </div>
</header>

<div class="education-container">
    <div class="education-grid">
        @foreach (var b in blocks)
        {
            var isExam     = b.Type == "Exam";
            var isDisabled = isExam && !examAvailable;

            var moduleKey = b.Type switch
            {
                "Practice" => $"{b.Name.Split(' ')[0]}.Practice",
                "Test"     => $"{b.Name.Split(' ')[0]}.Test",
                "Exam"     => "FinalExam",
                _          => b.Name
            };
            var isDone = completed.Contains(moduleKey);

            var blockClass = "education-block";
            if (b.Type == "Practice") blockClass += " practice";
            if (b.Type == "Test")     blockClass += " test";
            if (b.Type == "Exam")     blockClass += " exam";
            if (isDone && !isDisabled) blockClass += " completed";
            if (isDisabled)           blockClass += " disabled";
        <div class="@blockClass"
             onclick="handleClick('@b.Url', @(isAuthenticated.ToString().ToLower()), @(isDisabled.ToString().ToLower()))"
             style="">
            <h3>@b.Name</h3>
            <p>
                @(b.Type == "Learning"
                    ? "Learn about healthy habits"
                    : b.Type == "Practice"
                    ? "Practice your knowledge"
                    : b.Type == "Test"
                    ? "Test your understanding"
                    : "Test your overall knowledge")
            </p>
        </div>
        }
    </div>
</div>

@section Scripts
{
<script>
function handleClick(url, authed, disabled) {
    if (disabled) {
        alert('Сначала завершите все предыдущие блоки!');
        return;
    }
    if (!authed) {
        window.location.href = '/Auth/Register';
        return;
    }
    window.location.href = url;
}
</script>
}

<style>
    .education-container {
        padding: 100px 20px 40px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .education-header {
        margin-bottom: 30px;
    }

    .education-header h2 {
        color: var(--brand-color);
        font-size: 2.5em;
        font-weight: 600;
        text-align: left;
    }

    .education-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 30px;
        width: 100%;
    }

    .education-column {
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .education-block {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        min-height: 200px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .education-block:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .education-block h3 {
        color: var(--brand-color);
        font-size: 1.5em;
        margin-bottom: 15px;
        text-align: center;
    }

    .education-block p {
        color: var(--text-color);
        text-align: center;
        margin: 0;
        font-size: 1.1em;
    }

    .education-block.practice h3,
    .education-block.practice p {
        color: var(--brand-color);
    }

    .education-block.test {
        background: white;
    }

    .education-block.exam {
        background: var(--brand-color);
    }

    .education-block.exam h3,
    .education-block.exam p {
        color: gray;
    }

    .site-title {
        font-family: 'Quicksand', sans-serif;
        font-size: 2.5em;
        font-weight: 700;
        color: var(--brand-color, #388e3c);
        letter-spacing: 1px;
        margin-left: 20px;
    }
    
</style>