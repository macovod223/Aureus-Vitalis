@* Views/Education/FinalExam.cshtml *@
@model ExamModel
@{
    ViewData["Title"] = "Final Exam";
}

<div class="exam-area">
    <div class="exam-header">
        <h1>Финальный экзамен</h1>
        <div class="timer" id="timer">
            Оставшееся время: <span id="timeLeft">30:00</span>
        </div>
    </div>

    <form id="examForm" method="post">
        <div class="exam-section nutrition">
            <h2>Раздел 1: Питание</h2>

            <div class="question-block" data-question="1">
                <h3>Вопрос 1</h3>
                <p>Какие из следующих продуктов являются хорошими источниками белка?</p>
                <div class="options">
                    <label class="option">
                        <input type="checkbox" name="question_1" value="a" />
                        <span>Куриная грудка</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_1" value="b" />
                        <span>Чечевица</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_1" value="c" />
                        <span>Яйца</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_1" value="d" />
                        <span>Белый хлеб</span>
                    </label>
                </div>
            </div>

            <div class="question-block" data-question="2">
                <h3>Вопрос 2</h3>
                <p>Сколько порций овощей и фруктов рекомендуется употреблять ежедневно?</p>
                <div class="options">
                    <label class="option">
                        <input type="radio" name="question_2" value="a" />
                        <span>2-3 порции</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_2" value="b" />
                        <span>5-7 порций</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_2" value="c" />
                        <span>8-10 порций</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_2" value="d" />
                        <span>3-4 порции</span>
                    </label>
                </div>
            </div>
        </div>

        <div class="exam-section sport">
            <h2>Раздел 2: Физическая активность</h2>

            <div class="question-block" data-question="3">
                <h3>Вопрос 3</h3>
                <p>Выберите правильную последовательность этапов тренировки:</p>
                <div class="options sequence-options">
                    <div class="sequence-item" draggable="true" data-value="a">
                        <span class="sequence-number">1</span>
                        <span>Разминка</span>
                    </div>
                    <div class="sequence-item" draggable="true" data-value="b">
                        <span class="sequence-number">2</span>
                        <span>Основная часть</span>
                    </div>
                    <div class="sequence-item" draggable="true" data-value="c">
                        <span class="sequence-number">3</span>
                        <span>Заминка</span>
                    </div>
                    <div class="sequence-item" draggable="true" data-value="d">
                        <span class="sequence-number">4</span>
                        <span>Растяжка</span>
                    </div>
                </div>
            </div>

            <div class="question-block" data-question="4">
                <h3>Вопрос 4</h3>
                <p>Какие утверждения о кардио тренировках верны?</p>
                <div class="options">
                    <label class="option">
                        <input type="checkbox" name="question_4" value="a" />
                        <span>Улучшают работу сердечно-сосудистой системы</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_4" value="b" />
                        <span>Помогают сжигать калории</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_4" value="c" />
                        <span>Увеличивают мышечную массу</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_4" value="d" />
                        <span>Повышают выносливость</span>
                    </label>
                </div>
            </div>
        </div>

        <div class="exam-section sleep">
            <h2>Раздел 3: Сон</h2>

            <div class="question-block" data-question="5">
                <h3>Вопрос 5</h3>
                <p>Какие факторы негативно влияют на качество сна?</p>
                <div class="options">
                    <label class="option">
                        <input type="checkbox" name="question_5" value="a" />
                        <span>Использование смартфона перед сном</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_5" value="b" />
                        <span>Кофеин во второй половине дня</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_5" value="c" />
                        <span>Регулярный режим сна</span>
                    </label>
                    <label class="option">
                        <input type="checkbox" name="question_5" value="d" />
                        <span>Тяжелая пища перед сном</span>
                    </label>
                </div>
            </div>

            <div class="question-block" data-question="6">
                <h3>Вопрос 6</h3>
                <p>Какова оптимальная продолжительность сна для взрослого человека?</p>
                <div class="options">
                    <label class="option">
                        <input type="radio" name="question_6" value="a" />
                        <span>5-6 часов</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_6" value="b" />
                        <span>7-9 часов</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_6" value="c" />
                        <span>10-12 часов</span>
                    </label>
                    <label class="option">
                        <input type="radio" name="question_6" value="d" />
                        <span>4-5 часов</span>
                    </label>
                </div>
            </div>
        </div>

        <div class="exam-navigation">
            <button type="button" class="nav-button" onclick="previousQuestion()">Назад</button>
            <div class="question-indicators">
                @for (int i = 1; i <= 6; i++)
                {
                    <span class="indicator" data-question="@i" onclick="goToQuestion(@i)"></span>
                }
            </div>
            <button type="button" class="nav-button" onclick="nextQuestion()">Далее</button>
        </div>

        <button type="submit" class="submit-button" disabled>Завершить экзамен</button>
    </form>
</div>

@section Scripts {
    <script>
        let currentQuestion = 1;
        let timeLeft = 30 * 60; // 30 минут
        let answers = {};

        function startTimer() {
            const timerInterval = setInterval(() => {
                timeLeft--;
                updateTimerDisplay();

                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    submitExam();
                }
            }, 1000);
        }

        function updateTimerDisplay() {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            document.getElementById('timeLeft').textContent =
                `${minutes}:${seconds.toString().padStart(2, '0')}`;
        }

        function showQuestion(index) {
            document.querySelectorAll('.question-block').forEach(block => {
                block.style.display = 'none';
            });
            document.querySelector(`[data-question="${index}"]`).style.display = 'block';
            updateNavigationButtons();
            updateQuestionIndicators();
        }

        function goToQuestion(index) {
            currentQuestion = index;
            showQuestion(index);
        }

        function updateQuestionIndicators() {
            document.querySelectorAll('.indicator').forEach((indicator, index) => {
                const questionNumber = index + 1;
                indicator.classList.toggle('current', questionNumber === currentQuestion);
                indicator.classList.toggle('answered', isQuestionAnswered(questionNumber));
            });
        }

        function isQuestionAnswered(questionNumber) {
            const inputs = document.querySelectorAll(`[name="question_${questionNumber}"]:checked`);
            return inputs.length > 0;
        }

        function nextQuestion() {
            if (currentQuestion < 6) {
                currentQuestion++;
                showQuestion(currentQuestion);
            }
        }

        function previousQuestion() {
            if (currentQuestion > 1) {
                currentQuestion--;
                showQuestion(currentQuestion);
            }
        }

        function updateNavigationButtons() {
            const prevButton = document.querySelector('button[onclick="previousQuestion()"]');
            const nextButton = document.querySelector('button[onclick="nextQuestion()"]');

            prevButton.disabled = currentQuestion === 1;
            nextButton.disabled = currentQuestion === 6;
        }

        function checkAllAnswered() {
            const allAnswered = Array.from({ length: 6 }, (_, i) => i + 1)
                .every(questionNumber => isQuestionAnswered(questionNumber));

            document.querySelector('.submit-button').disabled = !allAnswered;
        }

        // Инициализация drag-and-drop для последовательности
        const sequenceItems = document.querySelectorAll('.sequence-item');
        sequenceItems.forEach(item => {
            item.addEventListener('dragstart', handleDragStart);
            item.addEventListener('dragover', handleDragOver);
            item.addEventListener('drop', handleDrop);
        });

        function handleDragStart(e) {
            e.dataTransfer.setData('text/plain', e.target.dataset.value);
            e.target.classList.add('dragging');
        }

        function handleDragOver(e) {
            e.preventDefault();
        }

        function handleDrop(e) {
            e.preventDefault();
            const draggedValue = e.dataTransfer.getData('text/plain');
            const dropTarget = e.target.closest('.sequence-item');
            const draggedItem = document.querySelector(`[data-value="${draggedValue}"]`);

            if (draggedItem && dropTarget) {
                const tempValue = dropTarget.dataset.value;
                const tempHtml = dropTarget.innerHTML;

                dropTarget.dataset.value = draggedValue;
                dropTarget.innerHTML = draggedItem.innerHTML;

                draggedItem.dataset.value = tempValue;
                draggedItem.innerHTML = tempHtml;
            }

            document.querySelector('.dragging')?.classList.remove('dragging');
            checkSequenceAnswer();
        }

        function checkSequenceAnswer() {
            const sequence = Array.from(document.querySelectorAll('.sequence-item'))
                .map(item => item.dataset.value);
            answers['question_3'] = sequence;
            updateQuestionIndicators();
            checkAllAnswered();
        }

        document.getElementById('examForm').addEventListener('change', (e) => {
            if (e.target.type === 'radio' || e.target.type === 'checkbox') {
                updateQuestionIndicators();
                checkAllAnswered();
            }
        });

        document.getElementById('examForm').addEventListener('submit', (e) => {
            e.preventDefault();
            submitExam();
        });

        function submitExam() {
            const formData = new FormData(document.getElementById('examForm'));
            const answers = {};

            for (const [key, value] of formData.entries()) {
                if (!answers[key]) {
                    answers[key] = [];
                }
                answers[key].push(value);
            }

            // Добавляем последовательность
            answers['question_3'] = Array.from(document.querySelectorAll('.sequence-item'))
                .map(item => item.dataset.value);

            // В реальном приложении здесь будет отправка на сервер
            const correctAnswers = {
                question_1: ['a', 'b', 'c'], // Источники белка
                question_2: ['b'], // 5-7 порций
                question_3: ['a', 'b', 'c', 'd'], // Последовательность тренировки
                question_4: ['a', 'b', 'd'], // Кардио
                question_5: ['a', 'b', 'd'], // Факторы сна
                question_6: ['b'] // 7-9 часов
            };

            const results = calculateResults(answers, correctAnswers);
            showExamResults(results);
        }

        function calculateResults(userAnswers, correctAnswers) {
            let correct = 0;
            let total = Object.keys(correctAnswers).length;

            for (const [question, correctAnswer] of Object.entries(correctAnswers)) {
                const userAnswer = userAnswers[question] || [];
                if (JSON.stringify(userAnswer.sort()) === JSON.stringify(correctAnswer.sort())) {
                    correct++;
                }
            }

            return {
                correctAnswers: correct,
                totalQuestions: total,
                percentage: Math.round((correct / total) * 100),
                passed: (correct / total) >= 0.8 // Проходной балл 80%
            };
        }

        function showExamResults(result) {
            const examArea = document.querySelector('.exam-area');
            examArea.innerHTML = `
                <div class="exam-results">
                    <h2>Результаты финального экзамена</h2>
                    <div class="score">
                        <p>Правильных ответов: ${result.correctAnswers}/${result.totalQuestions}</p>
                        <p>Процент выполнения: ${result.percentage}%</p>
                    </div>
                    <div class="result-message">
                        ${result.passed ? `
                            <div class="success-message">
                                <h3>Поздравляем!</h3>
                                <p>Вы успешно прошли финальный экзамен!</p>
                                <p>Теперь вы можете получить сертификат о прохождении курса.</p>
                                <button onclick="location.href='/Education/Certificate'" class="certificate-button">
                                    Получить сертификат
                                </button>
                            </div>
                        ` : `
                            <div class="failure-message">
                                <h3>Попробуйте еще раз</h3>
                                <p>Для получения сертификата необходимо набрать минимум 80%.</p>
                                <p>Повторите материал и попробуйте снова.</p>
                                <button onclick="location.href='/Education/Main'" class="nav-button">
                                    Вернуться к обучению
                                </button>
                            </div>
                        `}
                    </div>
                </div>
            `;
        }

        // Инициализация
        showQuestion(1);
        startTimer();
    </script>
}