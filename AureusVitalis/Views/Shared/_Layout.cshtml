<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - AureusVitalis</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/AureusVitalis.styles.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/auth.css"/>
    <link rel="stylesheet" href="~/css/education.css" asp-append-version="true"/>
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@500;700&display=swap" rel="stylesheet">
</head>
<body>

@{
    if (Context.Request.Path.StartsWithSegments("/Education") && !Context.Request.Path.Value.Contains("Main"))
    {
        Layout = "~/Views/Education/_EducationLayout.cshtml";
    }
}

@{
    if (Context.Request.Path.StartsWithSegments("/Achievements") && !Context.Request.Path.Value.Contains("Main"))
    {
        Layout = "~/Views/Education/_EducationLayout.cshtml";
    }
}

@if (Context.Request.Path.StartsWithSegments("/Auth"))
{
    @RenderBody()
}
else if (Context.Request.Path.StartsWithSegments("/DailyHelper") || Context.Request.Path.StartsWithSegments("/Education"))
{
    <header class="site-header">
        <a href="/" class="nav-icon">
            <img src="~/images/home.png" alt="Home"/>
        </a>
        <div class="site-title">Aureus&Vitalis</div>
        @if (Context.Request.Path.StartsWithSegments("/DailyHelper"))
        {
            <a href="/Education/Main" class="nav-icon">
                <img src="~/images/education.png" alt="Education"/>
            </a>
        }
        else
        {
            <a href="/DailyHelper/Selection" class="nav-icon daily-helper-link">
                <span>Daily helper</span>
            </a>
        }
    </header>
    <div class="main-container">
        @RenderBody()
    </div>
}
else
{
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">AureusVitalis</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Education" asp-action="Main">Education</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="DailyHelper" asp-action="Selection">Daily Helper</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Achievements" asp-action="Index">Достижения</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item d-flex align-items-center">
                                <span class="nav-username">Привет, @User.Identity.Name</span>

                                @* Скрытая POST-форма для Logout *@
                                <form id="logoutForm" asp-controller="Auth" asp-action="Logout" method="post"></form>
                                
                                <a href="#"
                                   class="nav-icon"
                                   title="Выйти"
                                   onclick="event.preventDefault(); document.getElementById('logoutForm').submit();">
                                    <img src="~/images/logout.png" alt="Logout" />
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Auth" asp-action="Login">Login</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
<script src="~/js/auth.js"></script>

@if (Context.Request.Path.StartsWithSegments("/DailyHelper"))
{
    <script src="~/js/exercises.js"></script>
}
@if (Context.Request.Path.StartsWithSegments("/Education"))
{
    <script src="~/js/education.js"></script>
}

@if (Context.Request.Path.Value?.Contains("Practice") == true)
{
    <script src="~/js/practice.js"></script>
}

@if (Context.Request.Path.Value?.Contains("Test") == true || Context.Request.Path.Value?.Contains("Exam") == true)
{
    <script src="~/js/test.js"></script>
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Обновление прогресса при завершении урока/теста
        function updateUserProgress(progress) {
            fetch('/Education/UpdateProgress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ progress: progress })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const progressBar = document.querySelector('.progress-bar');
                    const progressText = document.querySelector('.progress-text');
                    if (progressBar && progressText) {
                        progressBar.style.width = `${data.progress}%`;
                        progressText.textContent = `${data.progress}%`;
                    }
                }
            });
        }

        // Проверка доступности финального экзамена
        if (document.querySelector('.exam-block')) {
            fetch('/Education/CheckExamAvailability')
                .then(response => response.json())
                .then(data => {
                    const examBlock = document.querySelector('.exam-block');
                    if (!data.isAvailable) {
                        examBlock.classList.add('disabled');
                        examBlock.title = data.message;
                    }
                });
        }
    });
</script>
</body>
</html>